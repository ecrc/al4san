#+TITLE: ALtanal: Abstraction Layer for Task-bAsed NumericAl Libraries.
#+LANGUAGE:  en
#+OPTIONS: H:3 num:t \n:nil @:t ::t |:t _:nil ^:nil -:t f:t *:t <:t
#+OPTIONS: TeX:t LaTeX:t skip:nil d:nil pri:nil tags:not-in-toc html-style:nil

Task-based programming models have become ubiquitous in scientific applications (e.g., computational astronomy, computational fluid dynamics, fluid-structure interaction, Parareal, etc.) and numerical libraries (e.g., DPLASMA, MUMPS, HiCMA, etc.). There exist a myriad of dynamic runtime systems to support the task-based programming model on shared and distributed memory systems, possibly including hardware accelerators: OpenMP, StarPU, Quark, OmpSs, Kokkos, PaRSEC, etc. The lack of API standardization makes it difficult for task-based application or library developers to switch runtimes.  This hinders user productivity and also discourages developers from assessing the performance of specific features of a given runtime system. We present ALTANAL, a lightweight abstraction layer, which establishes a single common interface to bridge a task-based application with various runtime systems. ALTANAL facilitates the expression of tasking and maps to a variety of underlying system technologies, including shared and distributed-memory manycore systems, through the appropriate runtime system.

This kind of implementation paradigm allows to design high performing
lalgorithms on very different type of architecture:
laptop, many-core nodes, CPUs-GPUs, multiple nodes. 

* Get ALtanal

  To use last development states of ALtanal, please clone the master
  branch. Note that ALtanal contains a ~git submodule~ *altanal_cmake*.
  To get sources please use these commands:

  #+begin_src sh
    # if git version >= 1.9
    git clone 
    cd altanal
    # else
    git clone 
    cd altanal
  #+end_src
